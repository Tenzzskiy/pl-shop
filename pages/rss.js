import data from './../sources/data/cart_arenda-plasm77.ru.json'



const newsArr = data.news;
const DOMAIN = 'arenda-plazm77.ru';
const blogPostsRssXml = data => {
	let rssItemsXml = '';

	data.forEach(post => {
		rssItemsXml += `
      <item turbo="true">
        <title>${post.title}</title>
		<link>${DOMAIN}.ru/news/${post.index}</link>
        <pubDate>${post.date}</pubDate>
		<author>Arenda-Plazm</author>
        <yandex:related/>
        <turbo:content>
            <![CDATA[
                <header> 
                    <h1>${post.heading}</h1> 
                    <img src="${post.img}"/>
                </header> 
                ${post.content} 
            ]]>
        </turbo:content>
    </item>`;
	});

	return rssItemsXml;
};

const getRssXml = blogPosts => {
	const rssItemsXml = blogPostsRssXml(blogPosts);

	return `<?xml  version="1.0" encoding="UTF-8" ?>
  <rss xmlns:yandex="http://news.yandex.ru" xmlns:media="http://search.yahoo.com/mrss/" xmlns:turbo="http://turbo.yandex.ru" version="2.0">
    <channel>
        <title>–ó–∞–∫–∞–∑–∞—Ç—å —Ñ—É—Ä—à–µ—Ç –≤ –æ—Ñ–∏—Å —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π –±–ª—é–¥ –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –≤ –ú–æ—Å–∫–≤–µ ü•™</title>
        <link>${DOMAIN}.ru</link>
        <description>
            –î–æ—Å—Ç–∞–≤–∫–∞ –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è —Ñ—É—Ä—à–µ—Ç–æ–≤ —Å –≥–æ—Ç–æ–≤—ã–º–∏ –±–ª—é–¥–∞–º–∏ –≤ –æ—Ñ–∏—Å, —É—Å–ª—É–≥–∏ –≤—ã–µ–∑–¥–Ω–æ–π –∫–µ–π—Ç–µ—Ä–∏–Ω–≥–∞ –¥–ª—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –∫–æ–º–ø–∞–Ω–∏–∏. –ó–∞–∫—É—Å–∫–∏ –∏ –Ω–∞–±–æ—Ä—ã –ø–æ –¥–æ—Å—Ç—É–ø–Ω–æ–π —Ü–µ–Ω–µ.
        </description>
        <language>ru</language>
        ${rssItemsXml}
    </channel>
  </rss>`;
};

function Rss() {
	return null;
}

export const getServerSideProps = async ({ res }) => {
	const news = newsArr

	res.setHeader('Content-Type', 'text/xml');
	res.write(getRssXml(news));
	res.end();

	return {
		props: {}
	};
};

export default Rss;
